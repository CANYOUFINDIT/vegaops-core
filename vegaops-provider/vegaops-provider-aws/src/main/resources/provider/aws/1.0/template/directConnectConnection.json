{
  "vendor": "aws",
  "nodeType": "directConnectConnection",
  "componentId": "#componentId",
  "actions": [
    "list",
    "install-uninstall",
    "location",
    "confirm"
  ],
  "awsRegion": "T(software.amazon.awssdk.regions.Region).of(#regionId)",
  "credentials": "T(software.amazon.awssdk.auth.credentials.AwsBasicCredentials).create(#accessKey,#secret)",
  "awsCredentialsProvider": "T(software.amazon.awssdk.auth.credentials.StaticCredentialsProvider).create(#credentials)",
  "directConnectClient": "T(software.amazon.awssdk.services.directconnect.DirectConnectClient).builder().credentialsProvider(#awsCredentialsProvider).region(#awsRegion).build()",
  "list": {
    "client": "#directConnectClient",
    "method": "describeConnections",
    "argTypes": [
      "software.amazon.awssdk.services.directconnect.model.DescribeConnectionsRequest"
    ],
    "argNames": [
      "request"
    ],
    "request": "T(software.amazon.awssdk.services.directconnect.model.DescribeConnectionsRequest).builder().build()",
    "output": {
      "success": "#result.sdkHttpResponse().statusCode() eq 200",
      "close": "#directConnectClient.close()",
      "log": "false",
      "[connections]:[#result.connections()]": {
        "ownerAccount": "#me.ownerAccount()",
        "providerId": "#me.connectionId()",
        "connectionName": "#me.connectionName()",
        "connectionState": "#me.connectionState()",
        "region": "#me.region()",
        "location": "#me.location()",
        "bandwidth": "#me.bandwidth()",
        "vlan": "#me.vlan()",
        "partnerName": "#me.partnerName()",
        "loaIssueTime": "#me.loaIssueTime()",
        "lagId": "#me.lagId()",
        "awsDevice": "#me.awsDevice()",
        "jumboFrameCapable": "#me.jumboFrameCapable()",
        "awsDeviceV2": "#me.awsDeviceV2()",
        "hasLogicalRedundancy": "#me.hasLogicalRedundancy()",
        "tags": "#me.tags()",
        "providerName": "#me.providerName()"
      }
    }
  },
  "location": {
    "client": "#directConnectClient",
    "method": "describeLocations",
    "argTypes": [
      "software.amazon.awssdk.services.directconnect.model.DescribeLocationsRequest"
    ],
    "argNames": [
      "request"
    ],
    "request": "T(software.amazon.awssdk.services.directconnect.model.DescribeLocationsRequest).builder().build()",
    "output": {
      "success": "#result.sdkHttpResponse().statusCode() eq 200",
      "close": "#directConnectClient.close()",
      "log": "false",
      "[locations]:[#result.locations()]": {
        "locationCode": "#me.locationCode()",
        "locationName": "#me.locationName()",
        "region": "#me.region()"
      }
    }
  },
  "install": {
    "client": "#directConnectClient",
    "method": "createConnection",
    "argTypes": [
      "software.amazon.awssdk.services.directconnect.model.CreateConnectionRequest"
    ],
    "argNames": [
      "request"
    ],
    "request": "T(software.amazon.awssdk.services.directconnect.model.CreateConnectionRequest).builder().location(#location).bandwidth(#bandwidth).connectionName(#name).lagId(#lagId).providerName(#providerName).build()",
    "output": {
      "success": "#result.sdkHttpResponse().statusCode() eq 200",
      "close": "#directConnectClient.close()",
      "ownerAccount": "#result.ownerAccount()",
      "providerId": "#result.connectionId()",
      "connectionName": "#result.connectionName()",
      "connectionState": "#result.connectionState()",
      "region": "#result.region()",
      "location": "#result.location()",
      "bandwidth": "#result.bandwidth()",
      "vlan": "#result.vlan()",
      "partnerName": "#result.partnerName()",
      "loaIssueTime": "#result.loaIssueTime()",
      "lagId": "#result.lagId()",
      "awsDevice": "#result.awsDevice()",
      "jumboFrameCapable": "#result.jumboFrameCapable()",
      "awsDeviceV2": "#result.awsDeviceV2()",
      "hasLogicalRedundancy": "#result.hasLogicalRedundancy()",
      "tags": "#result.tags()",
      "providerName": "#result.providerName()"
    }
  },
  "confirm": {
    "client": "#directConnectClient",
    "method": "confirmConnection",
    "argTypes": [
      "software.amazon.awssdk.services.directconnect.model.ConfirmConnectionRequest"
    ],
    "argNames": [
      "request"
    ],
    "request": "T(software.amazon.awssdk.services.directconnect.model.ConfirmConnectionRequest).builder().connectionId(#connectionId).build()",
    "output": {
      "success": "#result.sdkHttpResponse().statusCode() eq 200"
    }
  },
  "uninstall": {
    "client": "#directConnectClient",
    "method": "deleteConnection",
    "argTypes": [
      "software.amazon.awssdk.services.directconnect.model.DeleteConnectionRequest"
    ],
    "argNames": [
      "request"
    ],
    "request": "T(software.amazon.awssdk.services.directconnect.model.DeleteConnectionRequest).builder().connectionId(#connectionId).build()",
    "output": {
      "success": "#result.sdkHttpResponse().statusCode() eq 200",
      "close": "#directConnectClient.close()",
      "deleteProviderId": "#connectionId"
      }
    }
}